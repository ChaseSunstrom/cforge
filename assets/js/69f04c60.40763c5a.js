"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[851],{747:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ide-integration","title":"IDE Integration","description":"\ud83d\udda5\ufe0f IDE Integration","source":"@site/docs/ide-integration.md","sourceDirName":".","slug":"/ide-integration","permalink":"/cforge/docs/ide-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/chasesunstrom/cforge/edit/main/docs/docs/ide-integration.md","tags":[],"version":"current","frontMatter":{"id":"ide-integration","title":"IDE Integration"},"sidebar":"sidebar","previous":{"title":"Cross-Compilation","permalink":"/cforge/docs/cross-compilation"},"next":{"title":"Scripts & Hooks","permalink":"/cforge/docs/scripts-hooks"}}');var o=r(4848),i=r(8453);const s={id:"ide-integration",title:"IDE Integration"},c=void 0,a={},d=[{value:"\ud83d\udda5\ufe0f IDE Integration",id:"\ufe0f-ide-integration",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-ide-integration",children:"\ud83d\udda5\ufe0f IDE Integration"}),"\n",(0,o.jsx)(n.p,{children:"Generate IDE-specific project files:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"# VS Code",children:"cforge ide vscode\r\n\r\n# CLion\r\ncforge ide clion\r\n\r\n# Xcode (macOS only)\r\ncforge ide xcode\r\n\r\n# Visual Studio (Windows only)\r\ncforge ide vs2022\r\ncforge ide vs:x64  # With architecture specification \n"})}),"\n",(0,o.jsx)(n.p,{children:"Example VS Code launch configuration (generated automatically):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"{",children:'  "version": "0.2.0",\r\n  "configurations": [\r\n    {\r\n      "name": "Debug",\r\n      "type": "cppdbg",\r\n      "request": "launch",\r\n      "program": "${workspaceFolder}/build/bin/${workspaceFolderBasename}",\r\n      "args": [],\r\n      "stopAtEntry": false,\r\n      "cwd": "${workspaceFolder}",\r\n      "environment": [],\r\n      "externalConsole": false,\r\n      "MIMode": "gdb",\r\n      "setupCommands": [\r\n        {\r\n          "description": "Enable pretty-printing for gdb",\r\n          "text": "-enable-pretty-printing",\r\n          "ignoreFailures": true\r\n        }\r\n      ],\r\n      "preLaunchTask": "build"\r\n    }\r\n  ]\r\n} \n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var t=r(6540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);