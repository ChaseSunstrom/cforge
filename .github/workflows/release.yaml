name: CForge C/C++ Build

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]  # Replace with your default branch name
  pull_request:
    branches: [ main, master ]  # Replace with your default branch name

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows MSVC", 
            os: windows-latest,
            config: "Release",
            compiler: "msvc"
          }
          - {
            name: "Linux GCC", 
            os: ubuntu-latest,
            config: "Release",
            compiler: "gcc"
          }
          - {
            name: "macOS Clang", 
            os: macos-latest,
            config: "Release",
            compiler: "clang"
          }

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Bootstrap and build CForge (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        chmod +x scripts/bootstrap.sh
        bash scripts/bootstrap.sh

    - name: Bootstrap and build CForge (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        .\scripts\bootstrap.ps1

    # Package on Linux only (TGZ and DEB)
    - name: Package CForge (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        exe="$(pwd)/build/bin/Release/cforge"
        chmod +x "$exe"
        "$exe" pack -c Release -t TGZ,DEB

    # Package on macOS only (TGZ)
    - name: Package CForge (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        exe="$(pwd)/build/bin/Release/cforge"
        chmod +x "$exe"
        "$exe" pack -c Release -t TGZ

    - name: Package CForge (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        # Invoke the built CForge executable directly
        $exe = Join-Path $PWD 'build\bin\Release\cforge.exe'
        & $exe pack -c Release -t ZIP

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cforge-${{ matrix.config.os }}
        path: |
          packages/*.zip
          packages/*.tar.gz
          packages/*.deb
          packages/*.rpm
          packages/*.exe
        retention-days: 7
        if-no-files-found: ignore

    - name: Convert config to lowercase
      run: |
        echo "CONFIG_LOWER=$(echo "$CONFIG" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      env:
        CONFIG: ${{ matrix.config.config }}