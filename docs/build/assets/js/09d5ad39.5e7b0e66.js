"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[864],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var c=t(6540);const i={},a=c.createContext(i);function r(e){const n=c.useContext(a);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),c.createElement(a.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>o});const c=JSON.parse('{"id":"examples","title":"Examples","description":"\ud83d\udcda Examples","source":"@site/docs/examples.md","sourceDirName":".","slug":"/examples","permalink":"/cforge/docs/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/chasesunstrom/cforge/edit/main/docs/docs/examples.md","tags":[],"version":"current","frontMatter":{"id":"examples","title":"Examples"},"sidebar":"sidebar","previous":{"title":"Advanced Topics","permalink":"/cforge/docs/advanced-topics"},"next":{"title":"Troubleshooting","permalink":"/cforge/docs/troubleshooting"}}');var i=t(4848),a=t(8453);const r={id:"examples",title:"Examples"},s=void 0,l={},o=[{value:"\ud83d\udcda Examples",id:"-examples",level:2},{value:"Simple Application",id:"simple-application",level:3},{value:"Library with vcpkg Dependencies",id:"library-with-vcpkg-dependencies",level:3},{value:"Multi-project Workspace",id:"multi-project-workspace",level:3}];function p(e){const n={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-examples",children:"\ud83d\udcda Examples"}),"\n",(0,i.jsx)(n.h3,{id:"simple-application",children:"Simple Application"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'# cforge.toml\n[project]\nname = "hello_app"\nversion = "1.0.0"\ndescription = "Hello World Application"\ntype = "executable"\nlanguage = "c++"\nstandard = "c++17"\n\n[build]\ndefault_config = "Debug"\n\n[targets.default]\nsources = ["src/**/*.cpp"]\ninclude_dirs = ["include"] \n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'// src/main.cpp\n#include <iostream>\n\nint main() {\n    std::cout << "Hello, CForge!" << std::endl;\n    return 0;\n} \n'})}),"\n",(0,i.jsx)(n.h3,{id:"library-with-vcpkg-dependencies",children:"Library with vcpkg Dependencies"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'# cforge.toml\n[project]\nname = "math_lib"\nversion = "0.1.0"\ndescription = "Mathematics Library"\ntype = "library"\nlanguage = "c++"\nstandard = "c++17"\n\n[dependencies.vcpkg]\nenabled = true\npackages = ["fmt", "doctest"]\n\n[targets.default]\nsources = ["src/**/*.cpp"]\ninclude_dirs = ["include"] \n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"// include/math_lib.h\n#pragma once\n\nnamespace math_lib {\n    int add(int a, int b);\n    int subtract(int a, int b);\n    int multiply(int a, int b);\n    int divide(int a, int b);\n} \n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'// src/math_lib.cpp\n#include "math_lib.h"\n#include <fmt/core.h>\n\nnamespace math_lib {\n    int add(int a, int b) {\n        fmt::print("Adding {} and {}\\n", a, b);\n        return a + b;\n    }\n    \n    int subtract(int a, int b) {\n        fmt::print("Subtracting {} from {}\\n", b, a);\n        return a - b;\n    }\n    \n    int multiply(int a, int b) {\n        fmt::print("Multiplying {} by {}\\n", a, b);\n        return a * b;\n    }\n    \n    int divide(int a, int b) {\n        fmt::print("Dividing {} by {}\\n", a, b);\n        return a / b;\n    }\n} \n'})}),"\n",(0,i.jsx)(n.h3,{id:"multi-project-workspace",children:"Multi-project Workspace"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:' # cforge-workspace.toml\n[workspace]\nname = "calculator"\nprojects = ["projects/core", "projects/gui", "projects/cli"]\ndefault_startup_project = "projects/gui" \n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'# projects/core/cforge.toml\n[project]\nname = "calc_core"\nversion = "0.1.0"\ndescription = "Calculator Core Library"\ntype = "library"\nlanguage = "c++"\nstandard = "c++17"\n\n[targets.default]\nsources = ["src/**/*.cpp"]\ninclude_dirs = ["include"] \n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'# projects/gui/cforge.toml\n[project]\nname = "calc_gui"\nversion = "0.1.0"\ndescription = "Calculator GUI Application"\ntype = "executable"\nlanguage = "c++"\nstandard = "c++17"\n\n[dependencies.workspace]\nname = "calc_core"\nlink_type = "static"\n\n[dependencies.vcpkg]\nenabled = true\npackages = ["imgui", "glfw3", "opengl"]\n\n[targets.default]\nsources = ["src/**/*.cpp"]\ninclude_dirs = ["include"] \n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);