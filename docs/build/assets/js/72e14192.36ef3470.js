"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[814],{795:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"quick-start","title":"Quick Start","description":"\u26a1 Quick Start","source":"@site/docs/quick-start.md","sourceDirName":".","slug":"/quick-start","permalink":"/cforge/docs/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/chasesunstrom/cforge/edit/main/docs/docs/quick-start.md","tags":[],"version":"current","frontMatter":{"id":"quick-start","title":"Quick Start"},"sidebar":"sidebar","previous":{"title":"Installation","permalink":"/cforge/docs/installation"},"next":{"title":"Command Reference","permalink":"/cforge/docs/command-reference"}}');var i=n(4848),c=n(8453);const o={id:"quick-start",title:"Quick Start"},a=void 0,l={},s=[{value:"\u26a1 Quick Start",id:"-quick-start",level:2},{value:"Creating a New Project",id:"creating-a-new-project",level:3},{value:"Example Project Structure",id:"example-project-structure",level:3},{value:"Example C++ Code",id:"example-c-code",level:3},{value:"Build and Run",id:"build-and-run",level:3}];function u(e){const r={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"-quick-start",children:"\u26a1 Quick Start"}),"\n",(0,i.jsx)(r.h3,{id:"creating-a-new-project",children:"Creating a New Project"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"# Create a new project in the current directory\r\ncforge init\r\n\r\n# Create a specific project type\r\ncforge init --template lib     # Create a library project\r\ncforge init --template header-only  # Create a header-only library\r\n\r\n# Build the project\r\ncforge build\r\n\r\n# Run the executable (for application projects)\r\ncforge run \n"})}),"\n",(0,i.jsx)(r.h3,{id:"example-project-structure",children:"Example Project Structure"}),"\n",(0,i.jsxs)(r.p,{children:["After initializing a project with ",(0,i.jsx)(r.code,{children:"cforge init"}),", you'll have a structure like this:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"myproject/\r\n\u251c\u2500\u2500 cforge.toml         # Project configuration\r\n\u251c\u2500\u2500 src/\r\n\u2502   \u2514\u2500\u2500 main.cpp        # Main source file\r\n\u251c\u2500\u2500 include/            # Header files\r\n\u251c\u2500\u2500 scripts/            # Custom scripts\r\n\u2514\u2500\u2500 build/              # Build artifacts (generated)\n"})}),"\n",(0,i.jsx)(r.h3,{id:"example-c-code",children:"Example C++ Code"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"src/main.cpp"})," (generated automatically):"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-cpp",children:' #include <iostream>\r\n\r\nint main(int argc, char* argv[]) {\r\n    std::cout << "Hello, cforge!" << std::endl;\r\n    return 0;\r\n} \n'})}),"\n",(0,i.jsx)(r.h3,{id:"build-and-run",children:"Build and Run"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"$ cforge build\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502           cforge - C/C++ Build System            \u2502\r\n\u2502                    v1.2.0                        \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nBuilding: myproject\r\n[1/4] Checking build tools\r\nChecking for required build tools...\r\nCMake: \u2713\r\nCompiler 'clang': \u2713\r\nBuild generator 'Ninja': \u2713\r\nvcpkg: \u2713 (will be configured during build)\r\nAll required build tools are available.\r\n\r\n[2/4] Configuring project\r\nProject configured with generator: Ninja (Debug)\r\n\r\n[3/4] Running pre-build hooks\r\nRunning pre-build hooks\r\nRunning hook: echo Starting build process...\r\nStarting build process...\r\n\r\n[4/4] Building project\r\nBuilding myproject in Debug configuration\r\n\u2713 Compiling 1 source files (completed in 1.2s)\r\n\r\n\u2713 Build completed successfully\r\n\r\n$ cforge run\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502           cforge - C/C++ Build System            \u2502\r\n\u2502                    v1.2.0                        \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nRunning: myproject\r\nFound executable: build/bin/myproject\r\nRunning: build/bin/myproject\r\n\r\nProgram Output\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\nHello, cforge!\r\n\r\n\u2713 Program executed successfully \n"})})]})}function d(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var t=n(6540);const i={},c=t.createContext(i);function o(e){const r=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(c.Provider,{value:r},e.children)}}}]);